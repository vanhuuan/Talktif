@using Talktif.Models
@{
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
    ViewData["Title"] = "All User";
    <link rel="stylesheet" href="../css/AdminUser.css" />
    List<user> users = new List<user>();
    List<City> cities = new List<City>();
    if (ViewBag.Users != null)
    {
        users = ViewBag.Users;
    }
    if (ViewBag.Cities != null)
    {
        cities = ViewBag.Cities;
    }
    string Message = (String.IsNullOrEmpty(ViewBag.Message)) ? "" : ViewBag.Message;
}
<div class="container admin-user">
     <header>
            <div class="search-wrapper">
                <span class="ti-search"></span>
                <input id="search" type="search" placeholder="Search" oninput="FilterSearch()" />
            </div>
            <div class="filter">
                <select name="filter" id="filter" onchange="Filter()">
                   <option value="ID">ID</option>
                   <option value="Name">Name</option>
                   <option value="Email">Email</option>
                </select>
            </div>
    </header>
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-6">
                    <h2>Manage <b>User</b></h2>
                </div>
                <div class="col-sm-6">
                    <a href="#addUserModal" class="btn btn-success" data-toggle="modal">
                        <i class="material-icons">&#xE147;</i>
                        <span>Add New Admin</span>
                    </a>
                </div>
            </div>
        </div>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Gender</th>
                    <th>Admin</th>
                    <th>Active</th>
                    <th>City</th>
                </tr>
            </thead>
            <tbody>
                @* @foreach (var item in users)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.isAdmin)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.isActive)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.cityID)
                        </td>
                        <td>
                            <a href="/Admin/UpdateUser?id=@item.id" class="edit"><i class="material-icons"
                                data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                            <a href="/Admin/DeleteUser?id=@item.id" class="delete"><i class="material-icons"
                                data-toggle="tooltip" title="Delete" onclick="HandleDelete(event)">&#xE872;</i></a>
                        </td>
                    </tr>
                } *@
            </tbody>
        </table>
        <div class="clearfix">
            <div class="hint-text">
            </div>
            <ul class="pagination">
            </ul>
        </div>
    </div>
</div>
<!-- Edit Modal HTML -->
<div id="addUserModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/Admin/Users" method="POST">
                <div class="modal-header">
                    <h4 class="modal-title">Add new Admin</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name :</label>
                        <input type="text" name="name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Email :</label>
                        <input type="email" name="email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Password :</label>
                        <input type="password" name="pass" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Gender:</label>
                        <div class="gender-details">
                            <div class="category d-flex justify-content-around">
                                <label>
                                    @Html.RadioButton("Gender","Male",true)
                                    <td>
                                        Male
                                    </td>
                                </label>
                                <label>
                                    @Html.RadioButton("Gender","Female")
                                    <td>
                                        Female
                                    </td>
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label>City :</label>
                            <div class="city-box w-100">
                                <select name="format" id="format" class="select-setting d-flex">
                                    @foreach (var city in cities)
                                    {
                                        <option value="@city.id">
                                            @city.name
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                        <input type="submit" class="btn btn-success" value="Add">
                    </div>
            </form>
        </div>
    </div>
</div>

<script>
    if ("@Message" != "") alert("@Message");
    const HandleDelete = (event) => {
        var success = window.confirm("Bạn có muốn xóa tài khoản này?");
        if (success == true) {
            alert("Xóa thành công");
        }
        else {
            event.preventDefault();
        }
    }

    var arrayTr = @Html.Raw(Json.Serialize(users));
    var arrayToString = JSON.stringify(Object.assign([], arrayTr));  // convert array to string
    var stringToJsonObject = JSON.parse(arrayToString);  // convert string to json object
    var filter = 'ID';

     function buildTable(data) {
        tbody.innerHTML = "";
        for (let i = 0; i < data.length; i++) {
            var id = data[i].id;
            var cityID = data[i].cityID;
            var gender = data[i].gender;
            var email = data[i].email;
            var isActive = data[i].isActive;
            var isAdmin = data[i].isAdmin;
            var name = data[i].name;
            tbody.innerHTML +=
             `<tr>
                <td>${id}</td>
                <td>${name}</td>
                <td>${email}</td>
                <td>${gender ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                <td>${isAdmin ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                <td>${isActive ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                <td>${cityID}</td>
                <td>
                    <a href="/Admin/UpdateUser?id=${id}" class="edit"><i class="material-icons"
                        data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                    <a href="/Admin/DeleteUser?id=${id}" class="delete"><i class="material-icons"
                        data-toggle="tooltip" title="Delete" onclick="HandleDelete(event)">&#xE872;</i></a>
                </td>
              </tr>`;
        }
    }

    const Filter = () =>{
        filter = document.getElementById("filter").value;
    }

    const searchUserByName = (value,data) =>{
        var filteredData = [];
        for(let i =0;i<data.length;i++){
            value = value.toLowerCase();
            var name = data[i].name.toLowerCase();
            if(name.includes(value)){
                filteredData.push(data[i]);
            }
        }
        return filteredData;

    }
     const searchUserByID = (value,data) =>{
        var filteredData = [];
        for(let i =0;i<data.length;i++){
            var id = data[i].id;
            if(id.toString().includes(value)){
                filteredData.push(data[i]);
            }
        }
        return filteredData;

    }
     const searchUserByEmail = (value,data) =>{
        var filteredData = [];
        for(let i =0;i<data.length;i++){
            value = value.toLowerCase();
            var email = data[i].email.toLowerCase();
            if(email.includes(value)){
                filteredData.push(data[i]);
            }
        }
        return filteredData;

    }

    const FilterSearch = () =>{
        var valueSearch = document.getElementById("search").value;
        if(filter === 'Name')
        {
            var data = searchUserByName(valueSearch,stringToJsonObject);
            buildTable(data);
        }
        else if(filter === 'ID'){
            var data = searchUserByID(valueSearch,stringToJsonObject);
            buildTable(data);
        }
        else{
            var data = searchUserByEmail(valueSearch,stringToJsonObject);
            buildTable(data);
        }
    }


    let tbody = document.querySelector("tbody");
    let tr = tbody.getElementsByTagName("tr");
    let ul = document.querySelector(".pagination");
    var text_user = document.querySelector('.hint-text');
    var totalUser = 0;

    function displayPage(limit) {
        tbody.innerHTML = "";
        for (let i = 0; i < limit; i++) {
            var id = stringToJsonObject[i].id;
            var cityID = stringToJsonObject[i].cityID;
            var gender = stringToJsonObject[i].gender;
            var email = stringToJsonObject[i].email;
            var isActive = stringToJsonObject[i].isActive;
            var isAdmin = stringToJsonObject[i].isAdmin;
            var name = stringToJsonObject[i].name;
            tbody.innerHTML +=
             `<tr>
                <td>${id}</td>
                <td>${name}</td>
                <td>${email}</td>
                <td>${gender ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                <td>${isAdmin ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                <td>${isActive ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                <td>${cityID}</td>
                <td>
                    <a href="/Admin/UpdateUser?id=${id}" class="edit"><i class="material-icons"
                        data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                    <a href="/Admin/DeleteUser?id=${id}" class="delete"><i class="material-icons"
                        data-toggle="tooltip" title="Delete" onclick="HandleDelete(event)">&#xE872;</i></a>
                </td>
              </tr>`;
        }
        buttonGenerator(limit);
    }
    displayPage(8);
    text_user.innerHTML = `Showing <b>${totalUser}`+"</b> out of " + `<b>${stringToJsonObject.length}</b> entries.` 

    function buttonGenerator(limit) {
        const nofTr = stringToJsonObject.length;
        if (nofTr <= limit) {
            ul.style.display = "none";
            totalUser = nofTr;
            text_user.innerHTML = `Showing <b>${totalUser}`+"</b> out of " + `<b>${stringToJsonObject.length}</b> entries.` 
        } else {
            ul.style.display = "flex";
            const nofPage = Math.ceil(nofTr / limit);
            for (i = 1; i <= nofPage; i++) {
                let li = document.createElement("li");
                li.className = "page-item";
                let a = document.createElement("a");
                a.className = "page-link";
                a.href = "#";
                a.setAttribute("data-page", i);
                li.appendChild(a);
                a.innerText = i;
                ul.appendChild(li);
                totalUser = limit;
                a.onclick = (e) => {
                    let x = e.target.getAttribute("data-page");
                    tbody.innerHTML = "";
                    x--;
                    let start = limit * x;
                    let end = start + limit;
                    let page = stringToJsonObject.slice(start, end);
                    totalUser = page.length;
                    text_user.innerHTML = `Showing <b>${totalUser}`+"</b> out of " + `<b>${stringToJsonObject.length}</b> entries.`
                    for (let i = 0; i < page.length; i++) {
                        let item = page[i];
                        var id = item.id;
                        var cityID = item.cityID;
                        var gender = item.gender;
                        var email = item.email;
                        var isActive = item.isActive;
                        var isAdmin = item.isAdmin;
                        var name = item.name;
                        tbody.innerHTML +=
                        `<tr>
                            <td>${id}</td>
                            <td>${name}</td>
                            <td>${email}</td>
                            <td>${gender ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                            <td>${isAdmin ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                            <td>${isActive ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                            <td>${cityID}</td>
                            <td>
                                <a href="/Admin/UpdateUser?id=${id}" class="edit"><i class="material-icons"
                                    data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                                <a href="/Admin/DeleteUser?id=${id}" class="delete"><i class="material-icons"
                                    data-toggle="tooltip" title="Delete" onclick="HandleDelete(event)">&#xE872;</i></a>
                            </td>
                        </tr>`;
                    }
                };
            }
        }
    }



</script>