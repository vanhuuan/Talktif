@using Talktif.Models
@{
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
    ViewData["Title"] = "All Report";
    <link rel="stylesheet" href="../css/AdminReport.css" />
    List<Report_Infor> reports = new List<Report_Infor>();
    if (ViewBag.Reports != null)
    {
        reports = ViewBag.Reports;
    }
}

<body>
    <div class="container admin-user">
        <form  class="form_search" action="/Admin/SearchReport" method="POST">
            <header>
                    <div class="search-wrapper">
                        <span class="ti-search"></span>
                        <input id="search" type="search" placeholder="Search" name = "search" />
                    </div>
                    <div class="filter">
                        <select name="filter" id="filter">
                            <option value="ID">ID</option>
                            <option value="Suspect">Suspecter</option>
                            <option value="Reason">Reason</option>
                        </select>
                    </div>
            </header>
        </form>
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-6">
                        <h2>Report <b>User</b></h2>
                    </div>
                    <div class="col-sm-6">
                        @* <a href="#notificationforUser" class="btn btn-success" data-toggle="modal"><i
                                class="material-icons">&#xE147;</i> <span>Notification for All User</span></a>
                        <a href="#deleteModal" class="btn btn-danger" data-toggle="modal"><i
                                class="material-icons">&#xE15C;</i> <span>Delete</span></a> *@
                    </div>
                </div>
            </div>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Reporter</th>
                        <th>Suspecter</th>
                        <th>Reason</th>
                        <th>Note</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @* @foreach (var item in reports)
                        {
                        <tr>
                        <td>
                        <span class="custom-checkbox">
                        <input type="checkbox" id="checkbox1" name="options[]" value="1">
                        <label for="checkbox1"></label>
                        </span>
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.id)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.reporter)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.suspect)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.reason)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.note)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.status)
                        </td>
                        <td>
                        <a href="/Admin/UpdateReport?id=@item.id" class="edit"><i class="material-icons"
                        data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                        </td>
                        </tr>
                        } *@
                </tbody>
            </table>
            <div class="clearfix">
                <div class="hint-text">
                    @* Showing
                        <b>
                        @(reports.Count() < 8 ? reports.Count() : 8)
                        </b>
                        out of
                        <b>
                        @NumberofReport
                        </b>
                        entries *@
                </div>
                <ul class="pagination">
                </ul>
            </div>
        </div>
    </div>
</body>

<script>
    var arrayTr = @Html.Raw(Json.Serialize(reports));
    var arrayToString = JSON.stringify(Object.assign([], arrayTr));  // convert array to string
    var stringToJsonObject = JSON.parse(arrayToString);  // convert string to json object
    var filter = 'ID';
    function buildTable(data) {
        tbody.innerHTML = "";
        for (let i = 0; i < data.length; i++) {
            var id = data[i].id;
            var note = data[i].note;
            var reason = data[i].reason;
            var reporter = data[i].reporter;
            var status = data[i].status;
            var suspect = data[i].suspect;
            tbody.innerHTML +=
                `<tr>
                <td>${id}</td>
                <td>${reporter}</td>
                <td>${suspect}</td>
                <td>${reason}</td>
                <td>${note}</td>
                <td>${status ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
               <td>
                    <a href="/Admin/UpdateReport?id=${id}" class="edit"><i class="material-icons"
                        data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                </td>
              </tr>`;
        }
    }

    const Filter = () => {
        filter = document.getElementById("filter").value;
    }

    const searchUserBySuspect = (value, data) => {
        var filteredData = [];
        for (let i = 0; i < data.length; i++) {
            value = value.toLowerCase();
            var suspect = data[i].suspect;
            if (suspect.toString().includes(value)) {
                filteredData.push(data[i]);
            }
        }
        return filteredData;

    }
    const searchUserByID = (value, data) => {
        var filteredData = [];
        for (let i = 0; i < data.length; i++) {
            var id = data[i].id;
            if (id.toString().includes(value)) {
                filteredData.push(data[i]);
            }
        }
        return filteredData;

    }
    const searchUserByReason = (value, data) => {
        var filteredData = [];
        for (let i = 0; i < data.length; i++) {
            value = value.toLowerCase();
            var reason = data[i].reason.toLowerCase();
            if (reason.includes(value)) {
                filteredData.push(data[i]);
            }
        }
        return filteredData;

    }

    const FilterSearch = () => {
        var valueSearch = document.getElementById("search").value;
        if (filter === 'Suspect') {
            var data = searchUserBySuspect(valueSearch, stringToJsonObject);
            buildTable(data);
        }
        else if (filter === 'ID') {
            var data = searchUserByID(valueSearch, stringToJsonObject);
            buildTable(data);
        }
        else {
            var data = searchUserByReason(valueSearch, stringToJsonObject);
            buildTable(data);
        }
    }


    let tbody = document.querySelector("tbody");
    let tr = tbody.getElementsByTagName("tr");
    let ul = document.querySelector(".pagination");
    var text_user = document.querySelector('.hint-text');
    var totalReport = 0;

    function displayPage(limit) {
        tbody.innerHTML = "";
        for (let i = 0; i < limit; i++) {
            var id = stringToJsonObject[i].id;
            var note = stringToJsonObject[i].note;
            var reason = stringToJsonObject[i].reason;
            var reporter = stringToJsonObject[i].reporter;
            var status = stringToJsonObject[i].status;
            var suspect = stringToJsonObject[i].suspect;
            tbody.innerHTML +=
                `<tr>
                <td>${id}</td>
                <td>${reporter}</td>
                <td>${suspect}</td>
                <td>${reason}</td>
                <td>${note}</td>
                <td>${status ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
               <td>
                    <a href="/Admin/UpdateReport?id=${id}" class="edit"><i class="material-icons"
                        data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                </td>
              </tr>`;
        }
        buttonGenerator(limit);
    }
    displayPage(8); //defecto
    text_user.innerHTML = `Showing <b>${totalReport}` + "</b> out of " + `<b>${stringToJsonObject.length}</b> entries.`

    function buttonGenerator(limit) {
        const nofTr = stringToJsonObject.length;
        if (nofTr <= limit) {
            ul.style.display = "none";
            totalReport = nofTr;
            text_user.innerHTML = `Showing <b>${totalReport}` + "</b> out of " + `<b>${stringToJsonObject.length}</b> entries.`
        } else {
            ul.style.display = "flex";
            const nofPage = Math.ceil(nofTr / limit);
            for (i = 1; i <= nofPage; i++) {
                let li = document.createElement("li");
                li.className = "page-item";
                let a = document.createElement("a");
                a.className = "page-link";
                a.href = "#";
                a.setAttribute("data-page", i);
                li.appendChild(a);
                a.innerText = i;
                ul.appendChild(li);
                totalReport = limit;
                a.onclick = (e) => {
                    let x = e.target.getAttribute("data-page");
                    tbody.innerHTML = "";
                    x--;
                    let start = limit * x;
                    let end = start + limit;
                    let page = stringToJsonObject.slice(start, end);
                    totalReport = page.length;
                    text_user.innerHTML = `Showing <b>${totalReport}` + "</b> out of " + `<b>${stringToJsonObject.length}</b> entries.`
                    for (let i = 0; i < page.length; i++) {
                        let item = page[i];
                        var id = item.id;
                        var note = item.note;
                        var reason = item.reason;
                        var reporter = item.reporter;
                        var status = item.status;
                        var suspect = item.suspect;
                        tbody.innerHTML +=
                            `<tr>
                                <td>${id}</td>
                                <td>${reporter}</td>
                                <td>${suspect}</td>
                                <td>${reason}</td>
                                <td>${note}</td>
                                <td>${status ? `<input checked="checked" class="check-box" disabled="disabled" type="checkbox">` : `<input class="check-box" disabled="disabled" type="checkbox">`}</td>
                            <td>
                                    <a href="/Admin/UpdateReport?id=${id}" class="edit"><i class="material-icons"
                                        data-toggle="tooltip" title="Edit">&#xE254;</i></a>
                                </td>
                            </tr>`;
                    }
                };
            }
        }
    }

</script>